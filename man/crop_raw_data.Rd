% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crop_raw_data.R
\name{crop_raw_data}
\alias{crop_raw_data}
\title{Crop raw water/air temperature data from HOBO sensors}
\usage{
crop_raw_data(rawdata_loc, ldrtimes_fn, cropped_loc, nfiles = NULL)
}
\arguments{
\item{rawdata_loc}{File path to the directory containing the raw data to be
cropped. The names of the raw data files must be in the format
sitename_medium_deployseason_deployyear.csv, e.g. NolanLower_air_sum_23.csv.}

\item{ldrtimes_fn}{Filename for the LDRTimes file, the lookup table of
deployment and retrieval times. This file is assumed to be in the same folder
as the raw data.}

\item{cropped_loc}{File path to the directory where cropped data files will
be written and stored.}

\item{nfiles}{Number of files to process. Default value is \code{NULL}, in which
case all files in the raw data directory \code{rawdata_loc} are processed. If
\code{nfiles} is set to a positive integer such as 3, then only the first three
files in \code{rawdata_loc} will be cropped.}
}
\description{
Crop raw water/air temperature data from HOBO sensors
}
\examples{

# the following two lines of code are only necessary for the example data;
# for your own data, simply set base_loc to the base file path for your
# computer, e.g. base_loc = "data/2022_summer/"
example_loc = fs::path_package("extdata", package = "dataQCtools")
base_loc = paste0(example_loc, "/data/2022_summer/")
rawdata_loc = paste0(base_loc, "1_raw_csv/")
cropped_loc = base_loc
#cropped_loc = paste0(base_loc, "2_cropped_csv/")
#croppedplots_loc = paste0(base_loc, "2_cropped_plots/")
ldrtimes_fn = "LDRTimes_summer22.xlsx"
# check that R can find your raw data files
# Get a list of the filenames of all the raw data files you will be clipping
csv_files = list.files(path = rawdata_loc, pattern = '*csv')
# this is now a list of all filenames; we haven't read in the data yet, but
# make sure this lists all the raw files you want to crop:
csv_files

# read in LDRTimes lookup table and take a look at it
ldrtimes = readxl::read_xlsx(paste0(rawdata_loc, ldrtimes_fn))
ldrtimes # or View(ldrtimes)

# then crop the data!
crop_raw_data(rawdata_loc, ldrtimes_fn, cropped_loc)

}
