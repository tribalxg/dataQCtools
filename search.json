[{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://tribalxg.github.io/dataQCtools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://tribalxg.github.io/dataQCtools/articles/cropping.html","id":"editable-script","dir":"Articles","previous_headings":"","what":"Editable script","title":"Cropping data recorded before deployment and after retrieval","text":"script can use prefer code single script rather installable package format. Just click clipboard icon top right corner code chunk copy code, open new R script RStudio paste , save script wherever like store computer.","code":"# load necessary libraries library(zoo) library(grid) library(plotly) library(readxl) library(scales) library(runner) # for moving averages library(ggthemes) # for plotting library(tidyverse) # need for dplyr and ggplot2 library(lubridate) # for handling dates library(gridExtra) library(flextable) # for making tables with conditional formatting, merged cells and more library(RColorBrewer)  base_loc <- \"data/2022_summer/\"  # directory containing your raw data rawdata_loc <- paste0(base_loc, \"1_raw_csv/\")  # directory where your cropped data will be (or currently is) stored cropped_loc <- paste0(base_loc, \"2_cropped_csv/\")  # directory where plots of cropped and raw data will be stored croppedplots_loc <- paste0(base_loc, \"2_cropped_plots/\")  # name of your LDRTimes file that has the lookup table with deployment/retrieval dates ldrtimes_fn <- \"LDRTimes_summer22.xlsx\"  # check that R can find your raw data files # Get all temperature data filenames # note: * is called a glob, short for global # IMPORTANT: filenames must be in the format sitename_medium_deployseason_deployyear.csv #            e.g. NolanLower_air_sum_23.csv csv_files = list.files(path = rawdata_loc, pattern = '*csv') # this is now a list of all filenames; we haven't read in the data yet, but # make sure this lists all the raw files you want to crop csv_files  # read in LDR file and take a look at it # note: this assumes the LDR file is in the folder indicated by rawdata_loc ldrtimes = read_xlsx(paste0(rawdata_loc, ldrtimes_fn))  # once you're sure that file paths are working and your ldrtimes looks right, # crop the files!  # get a list of all the temperature data filenames csv_files = list.files(path = rawdata_loc, pattern = '*csv') # read in LDR file # - this assumes the LDR file is an excel file in the folder indicated by rawdata_loc ldrtimes = read_xlsx(paste0(rawdata_loc, ldrtimes_fn))  i = 0 for(this.file in csv_files){   i = i + 1   #this.file = csv_files[1] # uncomment to troubleshoot within loop   cat(paste0(\"Reading file \", i, \" of \", length(csv_files), \": \", this.file), fill = TRUE)      # extract metadata from the filename   filename.parts = strsplit(this.file, '[_.]')[[1]]   csv.site = filename.parts[1]   csv.media = filename.parts[2]   csv.season = filename.parts[3]   csv.year = filename.parts[4]      # convert the character-format datetime to an R POSIXct object   # ymd_hm is the format the character string is in initially; it tells R   # how to read and interpret the character string   # sometimes R reads in the datetime format as mdy_hms and sometimes mdy_hm.    # This tryCatch handles either hh:mm:ss or hh:mm format in csv files   this.data =  tryCatch(     {        read_csv(paste0(rawdata_loc, this.file),                skip = 2, # skip the first two lines of the file                col_select = 1:3, # read only the first three columns of data                col_names = FALSE, # don't try to name columns from a row of the file                show_col_types = FALSE) %>% # suppresses print message         rename(\"row.num\" = X1,                \"datetime\" = X2,                \"temperature\" = X3) %>%         mutate(datetime = mdy_hms(datetime)) #for datetime in hh:mm:ss     },      warning = function(cond) { #if datetime isn't in hh:mm:ss, will now try hh:mm format       read_csv(paste0(rawdata_loc, this.file),                skip = 2, # skip the first two lines of the file                col_select = 1:3, # read only the first three columns of data                col_names = FALSE, # don't try to name columns from a row of the file                show_col_types = FALSE) %>% # suppresses print message         rename(\"row.num\" = X1,                \"datetime\" = X2,                \"temperature\" = X3) %>%         mutate(datetime = mdy_hm(datetime)) #for datetime in hh:mm     }   )      # crop the data   deploy.retrieval = ldrtimes %>%     # select the row(s) of ldrtimes that match this datafile     # should be exactly one row, but if there are no rows or multiple rows that     # match, this step will pull that many rows     filter(site == csv.site, deploy_season == csv.season,            deploy_year == csv.year, media == csv.media) %>%     # keep just the deploy_time and retrieval_time variables/columns     select(deploy_time, retrieval_time)      if(nrow(deploy.retrieval) == 0){     stop(\"no rows of ldrtimes matched this csv file.\")   }   if(nrow(deploy.retrieval) > 1){     stop(\"multiple rows of ldrtimes matched this csv file.\")   }      deploy = deploy.retrieval$deploy_time   retrieval = deploy.retrieval$retrieval_time      if(retrieval > deploy) {     cropped.data = filter(this.data,                           datetime > deploy,                           datetime < retrieval)        } # if(retrieval > deploy)      # write cropped csv files to cropped folder   write_csv(cropped.data,             file=paste0(cropped_loc, str_split_i(this.file,\"[.]\",1),\"_cropped.csv\"))      #Create a dataframe of the raw and cropped data   cropvraw <- left_join(this.data, cropped.data, by=c(\"row.num\", \"datetime\")) %>%     rename(raw.temp=temperature.x, cropped.temp =temperature.y) %>%#rename temperature from each file      #create new column of data type (raw or cropped for plotting in ggplot)     pivot_longer(cols=raw.temp:cropped.temp, names_to=\"type\", values_to=\"temp\")      cropvraw.plot <- ggplot(cropvraw, aes(x=datetime, y=temp, color=type)) +     geom_line() +     geom_point() +     labs(title = paste0(\" Raw versus Cropped data\"),          x = \"Date\", y = \"Temperature (C)\")+     theme(axis.text = element_text(colour = \"black\", size = (12)))      ggsave(paste0(croppedplots_loc, csv.site, \"_rawvscroppeddata.png\"), cropvraw.plot,          width = 11, height = 8.5, units = \"in\")    }  cat(\"Done.\", fill = TRUE)"},{"path":[]},{"path":"https://tribalxg.github.io/dataQCtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jess Kunke. Author, maintainer.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kunke J (2025). dataQCtools: Automate data cropping, QC, . R package version 0.0.0.9000, https://tribalxg.github.io/dataQCtools/.","code":"@Manual{,   title = {dataQCtools: Automate data cropping, QC, and more},   author = {Jess Kunke},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://tribalxg.github.io/dataQCtools/}, }"},{"path":"https://tribalxg.github.io/dataQCtools/index.html","id":"dataqctools-automate-data-cropping-qc-and-more","dir":"","previous_headings":"","what":"Automate data cropping, QC, and more","title":"Automate data cropping, QC, and more","text":"code documentation repository actively developed use Tribes throughout Tribal Exchange Network.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Automate data cropping, QC, and more","text":"code developed Jess Kunke, Kim Bray, Angie Reed automate several steps Hoh Tribe’s high-frequency water air temperature data processing quality control (QC). Specifically, code following tasks: Reads many different csv files HOBO sensors different sites combines data together common dataset Crops data remove measurements recorded sensor deployment (time sensor turned time fully installed field) sensor retrieval (time sensor removed field brought back lab). Plots cropped raw data together visualize much data cropped site. Generates QC plots identifying suspicious values manually corrected. step fully automated, current script allows user manually explore results make decisions. Reads quality-controlled data (user removed corrected spurious values), computes seven-day average daily maximum temperature (7DADM), compares values water quality standards determine sites impaired dates, outputs table included Tribal assessment report (TAR).","code":""},{"path":"https://tribalxg.github.io/dataQCtools/index.html","id":"setting-up","dir":"","previous_headings":"","what":"Setting up","title":"Automate data cropping, QC, and more","text":"need install several following R packages using code first time given computer. , can run line code RStudio:","code":"install.packages(c(\"zoo\", \"grid\", \"plotly\", \"readxl\", \"scales\", \"runner\",  \"ggthemes\", \"tidyverse\", \"lubridate\", \"gridExtra\", \"flextable\", \"RColorBrewer\", \"magrittr\"))"},{"path":"https://tribalxg.github.io/dataQCtools/index.html","id":"practice-example","dir":"","previous_headings":"","what":"Practice example","title":"Automate data cropping, QC, and more","text":"can use provided example data practice using code, substitute data. Please see vignettes/articles help pages examples.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute 7DADM — compute_7DADM","title":"Compute 7DADM — compute_7DADM","text":"period seven consecutive days, function computes daily max water temperature day, computes average daily max temperatures. implementation assumes data already quality-controlled remove impute data time periods logger dewatered, buried, nonfunctional.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute 7DADM — compute_7DADM","text":"","code":"compute_7DADM(all_data)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute 7DADM — compute_7DADM","text":"all_data R data frame object data used computing 7DADM. compute_7DADM_and_exceedance(), data frame output read_in_qcd_data().","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute 7DADM — compute_7DADM","text":"data frame including newly calculated 7DADM values.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM_and_exceedance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute 7DADM and identify site exceedances — compute_7DADM_and_exceedance","title":"Compute 7DADM and identify site exceedances — compute_7DADM_and_exceedance","text":"function assumes data come single water year data two deployments, fall deployment summer deployment. example, 2021-2022 water year provided example data, two deployment seasons fall 2021 summer 2022.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM_and_exceedance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute 7DADM and identify site exceedances — compute_7DADM_and_exceedance","text":"","code":"compute_7DADM_and_exceedance(fall_data_loc, sum_data_loc, lookup_loc)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM_and_exceedance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute 7DADM and identify site exceedances — compute_7DADM_and_exceedance","text":"fall_data_loc File path directory quality-controlled fall data. sum_data_loc File path directory quality-controlled summer data. lookup_loc File path directory two lookup tables called site_group.csv group_wqs.csv. Examples files provided lookup_tables folder; data beyond example data, need edited reflect sites water quality standards data interest. Site-group lookup table: Two sites group WQS schedule throughout water year one row site Example: Group-WQS lookup table: Provides details WQS schedule group one row group-WQS combination 01/01 12/31 example, group three different WQS throughout water year, three rows group can generated using write_group_wqs() function, can written spreadsheet exported csv file called group_wqs.csv Example:","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM_and_exceedance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute 7DADM and identify site exceedances — compute_7DADM_and_exceedance","text":"data frame 7DADM exceedances.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/compute_7DADM_and_exceedance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute 7DADM and identify site exceedances — compute_7DADM_and_exceedance","text":"","code":"#library(magrittr)  #fall_data_loc <- \"data/2021_fall/4_final_data/\" #sum_data_loc <- \"data/2022_summer/4_final_data/\" #lookup_loc <- \"lookup_tables/\"  #compute_7DADM_and_exceedance(fall_data_loc, sum_data_loc, lookup_loc)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/crop_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop raw water/air temperature data from HOBO sensors — crop_raw_data","title":"Crop raw water/air temperature data from HOBO sensors — crop_raw_data","text":"Crop raw water/air temperature data HOBO sensors","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/crop_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop raw water/air temperature data from HOBO sensors — crop_raw_data","text":"","code":"crop_raw_data(rawdata_loc, ldrtimes_fn, cropped_loc, nfiles = NULL)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/crop_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop raw water/air temperature data from HOBO sensors — crop_raw_data","text":"rawdata_loc File path directory containing raw data cropped. names raw data files must format sitename_medium_deployseason_deployyear.csv, e.g. NolanLower_air_sum_23.csv. ldrtimes_fn Filename LDRTimes file, lookup table deployment retrieval times. file assumed folder raw data. cropped_loc File path directory cropped data files written stored. nfiles Number files process. Default value NULL, case files raw data directory rawdata_loc processed. nfiles set positive integer 3, first three files rawdata_loc cropped.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/crop_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop raw water/air temperature data from HOBO sensors — crop_raw_data","text":"","code":"# the following two lines of code are only necessary for the example data; # for your own data, simply set base_loc to the base file path for your # computer, e.g. base_loc = \"data/2022_summer/\" example_loc = fs::path_package(\"extdata\", package = \"dataQCtools\") base_loc = paste0(example_loc, \"/data/2022_summer/\") rawdata_loc = paste0(base_loc, \"1_raw_csv/\") cropped_loc = base_loc #cropped_loc = paste0(base_loc, \"2_cropped_csv/\") #croppedplots_loc = paste0(base_loc, \"2_cropped_plots/\") ldrtimes_fn = \"LDRTimes_summer22.xlsx\" # check that R can find your raw data files # Get a list of the filenames of all the raw data files you will be clipping csv_files = list.files(path = rawdata_loc, pattern = '*csv') # this is now a list of all filenames; we haven't read in the data yet, but # make sure this lists all the raw files you want to crop: csv_files #>  [1] \"CedarLower_water_sum_22.csv\"     \"CedarUpper_water_sum_22.csv\"     #>  [3] \"ChalaatLower_water_sum_22.csv\"   \"ChalaatUpper_water_sum_22.csv\"   #>  [5] \"Cottonwood_water_sum_22.csv\"     \"CrippenSprings_water_sum_22.csv\" #>  [7] \"EFIronMaiden_water_sum_22.csv\"   \"EFKalaloch_water_sum_22.csv\"     #>  [9] \"EastPole_water_sum_22.csv\"       \"ElkLower_water_sum_22.csv\"       #> [11] \"ElkUpper_water_sum_22.csv\"       \"Fletcher_water_sum_22.csv\"       #> [13] \"GoodmanLower_water_sum_22.csv\"   \"GoodmanUpper_water_sum_22.csv\"    # read in LDRTimes lookup table and take a look at it ldrtimes = readxl::read_xlsx(paste0(rawdata_loc, ldrtimes_fn)) ldrtimes # or View(ldrtimes) #> # A tibble: 65 × 9 #>    site          media latitude longitude unit_sn deploy_time         #>    <chr>         <chr> <lgl>    <lgl>     <lgl>   <dttm>              #>  1 Alder         water NA       NA        NA      2022-05-26 16:00:00 #>  2 AndersonLower water NA       NA        NA      2022-05-13 16:00:00 #>  3 AndersonUpper water NA       NA        NA      2022-05-27 16:00:00 #>  4 BradenLower   water NA       NA        NA      2022-05-11 16:00:00 #>  5 BradenUpper   water NA       NA        NA      2022-05-25 16:00:00 #>  6 CanyonSprings water NA       NA        NA      2022-05-19 16:00:00 #>  7 CedarLower    water NA       NA        NA      2022-05-20 16:00:00 #>  8 CedarUpper    water NA       NA        NA      2022-05-25 16:00:00 #>  9 ChalaatLower  water NA       NA        NA      2022-05-13 16:00:00 #> 10 ChalaatUpper  water NA       NA        NA      2022-05-11 16:00:00 #> # ℹ 55 more rows #> # ℹ 3 more variables: retrieval_time <dttm>, deploy_season <chr>, #> #   deploy_year <dbl>  # then crop the data! crop_raw_data(rawdata_loc, ldrtimes_fn, cropped_loc) #> Reading file 1 of 14: CedarLower_water_sum_22.csv #> Reading file 2 of 14: CedarUpper_water_sum_22.csv #> Reading file 3 of 14: ChalaatLower_water_sum_22.csv #> Reading file 4 of 14: ChalaatUpper_water_sum_22.csv #> Reading file 5 of 14: Cottonwood_water_sum_22.csv #> Reading file 6 of 14: CrippenSprings_water_sum_22.csv #> Reading file 7 of 14: EFIronMaiden_water_sum_22.csv #> Reading file 8 of 14: EFKalaloch_water_sum_22.csv #> Reading file 9 of 14: EastPole_water_sum_22.csv #> Reading file 10 of 14: ElkLower_water_sum_22.csv #> Reading file 11 of 14: ElkUpper_water_sum_22.csv #> Reading file 12 of 14: Fletcher_water_sum_22.csv #> Reading file 13 of 14: GoodmanLower_water_sum_22.csv #> Reading file 14 of 14: GoodmanUpper_water_sum_22.csv #> Done."},{"path":"https://tribalxg.github.io/dataQCtools/reference/dataQCtools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dataQCtools: Automate data cropping, QC, and more — dataQCtools-package","title":"dataQCtools: Automate data cropping, QC, and more — dataQCtools-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://tribalxg.github.io/dataQCtools/reference/dataQCtools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dataQCtools: Automate data cropping, QC, and more — dataQCtools-package","text":"Maintainer: Jess Kunke jessicakunke@gmail.com (ORCID)","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/make_qc_plots_of_cropped_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make QC plots of cropped data — make_qc_plots_of_cropped_data","title":"Make QC plots of cropped data — make_qc_plots_of_cropped_data","text":"function intended used cropped data, csv files created crop_raw_data().","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/make_qc_plots_of_cropped_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make QC plots of cropped data — make_qc_plots_of_cropped_data","text":"","code":"make_qc_plots_of_cropped_data(cropped_loc, qc_plots_loc)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/make_qc_plots_of_cropped_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make QC plots of cropped data — make_qc_plots_of_cropped_data","text":"cropped_loc File path directory containing cropped data generated crop_raw_data() use making QC plots. files must csv format. names cropped data files must start _. example, file air data site NolanLower deployment date Summer 2023 filename starting NolanLower_air_sum_23, like NolanLower_air_sum_23_cropped.csv. qc_plots_loc File path directory QC plots stored.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/make_qc_plots_of_cropped_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make QC plots of cropped data — make_qc_plots_of_cropped_data","text":"","code":"# this code assumes you already have some cropped data available # so for the example, let's crop some of the raw data that is # provided with the dataQCtools package example_loc = fs::path_package(\"extdata\", package = \"dataQCtools\") base_loc = paste0(example_loc, \"/data/2022_summer/\") rawdata_loc = paste0(base_loc, \"1_raw_csv/\") cropped_loc = base_loc ldrtimes_fn = \"LDRTimes_summer22.xlsx\" # first let's delete any files that are already there, so that if you # have many files we start fresh and just process a few unlink(paste0(cropped_loc, \"2_cropped_csv/*\")) # now let's crop just three files for us to QC crop_raw_data(rawdata_loc, ldrtimes_fn, cropped_loc, nfiles = 3) #> Reading file 1 of 3: CedarLower_water_sum_22.csv #> Reading file 2 of 3: CedarUpper_water_sum_22.csv #> Reading file 3 of 3: ChalaatLower_water_sum_22.csv #> Done.  cropped_loc <- paste0(base_loc, \"2_cropped_csv/\") qc_plots_loc <- base_loc #paste0(base_loc, \"3_qc_plots/\")  # get a list of all the cropped data files filenames <- list.files(path = cropped_loc, pattern=\".csv\") # this is now a list of all filenames; we haven't read in the data yet, but # make sure this lists all the cropped data files you want to plot: filenames #> [1] \"CedarLower_water_sum_22_cropped.csv\"   #> [2] \"CedarUpper_water_sum_22_cropped.csv\"   #> [3] \"ChalaatLower_water_sum_22_cropped.csv\"  # then make QC plots make_qc_plots_of_cropped_data(cropped_loc, qc_plots_loc) #> [1] \"Reading in cropped data files...\" #> Reading file 1 of 3: CedarLower_water_sum_22_cropped.csv #> Reading file 2 of 3: CedarUpper_water_sum_22_cropped.csv #> Reading file 3 of 3: ChalaatLower_water_sum_22_cropped.csv #> Done reading in cropped data. #> Computing temperature differences... #> Making QC plots for site 1 of 3: CedarLower #> Making QC plots for site 2 of 3: CedarUpper #> Making QC plots for site 3 of 3: ChalaatLower #> Done."},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_group_to_WQS.html","id":null,"dir":"Reference","previous_headings":"","what":"Match groups of sites to their corresponding water quality standards — match_group_to_WQS","title":"Match groups of sites to their corresponding water quality standards — match_group_to_WQS","text":"Use group-WQS lookup table determine WQS group course water year.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_group_to_WQS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match groups of sites to their corresponding water quality standards — match_group_to_WQS","text":"","code":"match_group_to_WQS(wq_data, group_wqs)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_group_to_WQS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match groups of sites to their corresponding water quality standards — match_group_to_WQS","text":"wq_data Data frame group_wqs Group-WQS lookup table R data.frame object","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_group_to_WQS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match groups of sites to their corresponding water quality standards — match_group_to_WQS","text":"Data frame water quality standards exceedances","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_sites_to_WQS_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Match individual sites to water quality standards — match_sites_to_WQS_groups","title":"Match individual sites to water quality standards — match_sites_to_WQS_groups","text":"Use site-group lookup table determine WQS group site .","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_sites_to_WQS_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match individual sites to water quality standards — match_sites_to_WQS_groups","text":"","code":"match_sites_to_WQS_groups(wq_data, site_group)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_sites_to_WQS_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match individual sites to water quality standards — match_sites_to_WQS_groups","text":"wq_data Data frame site_group Site-group lookup table R data.frame object","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/match_sites_to_WQS_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match individual sites to water quality standards — match_sites_to_WQS_groups","text":"Data frame site_group lookup table information","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://tribalxg.github.io/dataQCtools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/read_in_qcd_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in quality-controlled data for all sites and deployments for a given water year — read_in_qcd_data","title":"Read in quality-controlled data for all sites and deployments for a given water year — read_in_qcd_data","text":"function called compute_7DADM_and_exceedance() read combine quality-controlled data single R data frame object computing 7DADM.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/read_in_qcd_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in quality-controlled data for all sites and deployments for a given water year — read_in_qcd_data","text":"","code":"read_in_qcd_data(fall_data_loc, sum_data_loc)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/read_in_qcd_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in quality-controlled data for all sites and deployments for a given water year — read_in_qcd_data","text":"fall_data_loc File path directory containing fall deployment data files; water year 2021-2022, fall deployment season Fall 2021. Files must csv format. sum_data_loc File path directory containing summer deployment data files; water year 2021-2022, summer deployment season Summer 2022. Files must csv format.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/read_in_qcd_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in quality-controlled data for all sites and deployments for a given water year — read_in_qcd_data","text":"single data frame object containing data fall_data_loc sum_data_loc","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/site_impairments_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table of site impairments — site_impairments_table","title":"Create a table of site impairments — site_impairments_table","text":"Given quality-controlled data given water year, function identifies sites impaired dates exceedances. creek/site impaired temperatures exceed water quality standards (WQS) least twice water year period least seven days two exceedances.","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/site_impairments_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table of site impairments — site_impairments_table","text":"","code":"site_impairments_table(wq_data)"},{"path":"https://tribalxg.github.io/dataQCtools/reference/site_impairments_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table of site impairments — site_impairments_table","text":"wq_data Data set exceedances, output compute_7DADM_and_exceedance().","code":""},{"path":"https://tribalxg.github.io/dataQCtools/reference/site_impairments_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table of site impairments — site_impairments_table","text":"table following:","code":""}]
